<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.1</version>
        <relativePath/>
    </parent>

    <groupId>com.systemkern</groupId>
    <artifactId>kommand2web</artifactId>
    <name>kommand2web</name>
    <version>0.3</version>
    <packaging>jar</packaging>

    <description>
        This pom does the following:
        * Distribution of the application to an ftp server via mvn target "wagon:upload-single"
    </description>

    <properties>
        <start.class>systemkern.CliEntryPointKt</start.class>

        <!-- compiler, maven plugins and extensions-->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <org.apache.maven.wagon.wagon-ftp.version>3.3.1</org.apache.maven.wagon.wagon-ftp.version>

        <!-- dependency versions-->
        <com.nhaarman.mockito-kotlin.version>1.6.0</com.nhaarman.mockito-kotlin.version>
        <org.javamoney.moneta.version>1.1</org.javamoney.moneta.version>
        <commons-net.commons-net.version>3.6</commons-net.commons-net.version>
        <org.zalando.jackson-datatype-money.version>1.1.0</org.zalando.jackson-datatype-money.version>

        <!-- distribution -->
        <distribution-server>ftp.systemkern.com</distribution-server>
        <distribution-url>
            ftp://${distribution-server}/repo/com/systemkern/${project.artifactId}/
        </distribution-url>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.nhaarman</groupId>
            <artifactId>mockito-kotlin</artifactId>
            <version>${com.nhaarman.mockito-kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>${commons-net.commons-net.version}</version>
        </dependency>

        <dependency>
            <groupId>org.javamoney</groupId>
            <artifactId>moneta</artifactId>
            <version>${org.javamoney.moneta.version}</version>
        </dependency>

        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>jackson-datatype-money</artifactId>
            <version>${org.zalando.jackson-datatype-money.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- testing dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}-${project.version}</finalName>
        <defaultGoal>clean verify</defaultGoal>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <!-- Kotlin compiler -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
            </plugin>

            <!-- Failsafe plugin for Integration Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <!-- create the jar file which includes the dependencies -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>${start.class}</mainClass>
                    <!-- this file name is also used in the run.sh and run.bat -->
                    <finalName>${project.name}</finalName>
                    <classifier>${project.version}</classifier>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- rewrite run scripts with correct application jar name -->
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <id>replace-for-documentation</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <preserveDir>true</preserveDir>
                            <basedir>${basedir}/src/bin</basedir>
                            <outputBasedir>${project.build.directory}</outputBasedir>
                            <outputDir>bin</outputDir>
                            <ignoreErrors>true</ignoreErrors>
                            <regex>false</regex>
                            <delimiters>
                                <delimiter>@</delimiter>
                            </delimiters>
                            <filesToInclude>
                                *.*
                            </filesToInclude>
                            <replacements>
                                <replacement>
                                    <token>finalName</token>
                                    <value>${project.name}-${project.version}</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- assemble the dist zip file -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <finalName>${project.name}-${project.version}</finalName>
                    <descriptors>
                        <descriptor>src/assembly/assembly.xml</descriptor>
                    </descriptors>
                    <outputDirectory>target</outputDirectory>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- upload the generated zip to the customer ftp -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <goal>upload-single</goal>
                    <serverId>launcher-ftp-distribution-server</serverId>
                    <fromFile>target/${project.build.finalName}.zip
                    </fromFile>
                    <url>${distribution-url}</url>
                    <toFile>${project.build.finalName}.zip</toFile>
                </configuration>
            </plugin>

            <!-- post processing of ascii snippets -->
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-docs</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html</backend>
                            <doctype>book</doctype>
                            <attributes>
                                <!-- see readme.adoc -->
                                <project-name>${project.name}</project-name>
                                <project-version>${project.version}</project-version>
                                <final-name>${project.name}-${project.version}</final-name>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.restdocs</groupId>
                        <artifactId>spring-restdocs-asciidoctor</artifactId>
                        <version>2.0.3.RELEASE</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
        <extensions>
            <!-- uploading the final product to ftp -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>${org.apache.maven.wagon.wagon-ftp.version}</version>
            </extension>
        </extensions>
    </build>

    <repositories>
        <repository>
            <id>systemkern-snapshots</id>
            <name>Systemkern Snapshots</name>
            <url>http://repo.systemkern.com</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>
